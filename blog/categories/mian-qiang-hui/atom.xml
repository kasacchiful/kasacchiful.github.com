<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 勉強会 | Kasacchiful's Blog]]></title>
  <link href="http://kasacchiful.github.com/blog/categories/mian-qiang-hui/atom.xml" rel="self"/>
  <link href="http://kasacchiful.github.com/"/>
  <updated>2014-07-21T16:46:05+09:00</updated>
  <id>http://kasacchiful.github.com/</id>
  <author>
    <name><![CDATA[kasacchiful]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NDS meetup in Niigataに参加しました。]]></title>
    <link href="http://kasacchiful.github.com/blog/2014/07/13/ndsmeetup1/"/>
    <updated>2014-07-13T22:45:00+09:00</updated>
    <id>http://kasacchiful.github.com/blog/2014/07/13/ndsmeetup1</id>
    <content type="html"><![CDATA[<p>第1回NDS in Niigataに参加しました。</p>

<p><a href="http://nagaoka.techtalk.jp/nino1">第1回 新潟出張版(2013/07/13) &ndash; 長岡 IT開発者 勉強会(NDS)</a>
<a href="http://connpass.com/event/7331/">NDS in Niigata #1 &ndash; connpass</a>
<a href="https://github.com/NagaokaDevelopersStudy/Studies/blob/master/NDSMeetUp%231.md">Studies/NDSMeetUp#1.md at master · NagaokaDevelopersStudy/Studies · GitHub</a></p>

<p>NDSは普段新潟県長岡市で開催されるんですけど、
今回は新潟出張版として、第1回が新潟市で開催されました。
今回のテーマは、自由ということでいろんな内容がありました。
自分も発表しています。</p>

<p>今回の初開催でいろいろ準備なされた主催者の@npoiさんと@dictavさんに感謝です。
おつかれさまでした。</p>

<!-- more -->


<h2>簡単なDevOps入門 (@npoi)</h2>

<p>今回の主催者の一人、@npoiさんの発表。</p>

<p>DevOpsをとりまく環境についての概要といったところか。
Infratasterとか試してみたいものがいろいろあって、興味がわいてくる。</p>

<h2>主婦とChef (@sambaiz)</h2>

<p>資料は<a href="http://www.slideshare.net/sakataiki/nds-chef">こちら</a></p>

<p>Chefについての、お話。</p>

<p>冒頭から「主婦とChef」の物語に引き込まれそうになった。
なかなか面白かったです。</p>

<h2>コマンドラインツール今昔 (@hayajo)</h2>

<p>資料は<a href="https://gist.github.com/hayajo/4a07fa6f33630b743412">こちら</a></p>

<p>新しくなったコマンドラインツールのお話。
ifconfigとかよく使うオジサンですけど、今や時代遅れ。
今どきのヤングになめられないように、ナウなツールを使わないとね。</p>

<p>CentOS7はこれから触って試す人なので、
いろいろ試してみます。</p>

<h2>カラダ改造計画（序章） (@kasacchiful)</h2>

<p>資料は<a href="https://speakerdeck.com/kasacchiful/nds-meetup-in-niigata-number-1">こちら</a></p>

<p>私の発表。技術的な内容は全然ない発表ですみません。
現在実施中の、カラダ改造計画の最初のイテレーション終了時期と
NDS開催時期がちょうど合わさったので、
LTでも良かったのですが、しゃべってしまいました。</p>

<p>内容としては、大したこといってませんが、</p>

<ul>
<li>カラダ改造計画とシステム開発計画は一緒</li>
<li>NDS等のいろんな勉強会の内容を自分なりに取り入れて、実践してみよう</li>
<li>何か面白いことがあったら、NDSで発表してみよう</li>
</ul>


<p>あたりをつかんでくれるとありがたいです。</p>

<h2>脆弱性の報告制度についてあれこれ (@ooooooo_q)</h2>

<p>脆弱性の報告についてのお話。</p>

<p>脆弱性を知ることや攻撃方法を知ることは、
それに伴って防御方法も知ることに繋がるので、
気に掛ける必要がある部分だと思う。
焼肉おごるとか、少しほっこりしていいな。</p>

<p>「脆弱性大好き」っておいwですが。</p>

<h2>安全な"○○でログイン"の作り方 (@gonchan93)</h2>

<p>資料は<a href="http://www.slideshare.net/ritou/secure-social-loginatndsniigata1-36922216">こちら</a></p>

<p>CPAN Autherの@gonchan93さんの発表。
OAuthやOpenIDに関するログインのセキュリティまわりのお話。
気を付けないと脆弱性突かれちゃうから、意識しないと難しいね。
参考になります。</p>

<p>ちなみに、YAPC2014でも、しゃべるそうです。</p>

<h2>Swiftに関する何か (@dictav)</h2>

<p>資料は<a href="https://speakerdeck.com/dictav/swiftwoshao-sidake">こちら</a></p>

<p>今回の主催者の一人、@dictavさんの発表。
最近話題のSwift言語の概要についての話。</p>

<p>iOSプログラマなら、少しは触ってみるのはアリかな？
自分はそれほどiOSプログラミングしたことないけど、いい感じで記述できそうな雰囲気がある。
Objective-Cからの移行とか、自分は気にする必要がないので、
今度iOSプログラミングする必要に迫られた場合は、Swiftで書くかも。</p>

<h2>iBeacon (@circled9)</h2>

<p>ここからLT枠。</p>

<p>資料は<a href="http://www.slideshare.net/circled9/ibeacon-36954299">こちら</a></p>

<p>iBeacon試してみましたという話。</p>

<p>iBeacon側でセキュリティを担保してはいけないとか、
この辺りは、実際に構築する際に気を付けないといけないことだね。</p>

<h2>私の自炊スタイル (@bnosuke)</h2>

<p>@bnosukeさんが実践している、自炊のお話。</p>

<p>いつもながら、いい声とわかりやすい説明、参考になります。</p>

<h2>懇親会</h2>

<p>いつもより早めの17時くらいから、新潟駅前の居酒屋で懇親会。</p>

<p>私の発表は、@mazhulinさんに気に入ってもらって、
結構お話させていただきました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDS36に参加しました。]]></title>
    <link href="http://kasacchiful.github.com/blog/2014/03/15/nds36/"/>
    <updated>2014-03-15T12:45:00+09:00</updated>
    <id>http://kasacchiful.github.com/blog/2014/03/15/nds36</id>
    <content type="html"><![CDATA[<p>第36回NDS（長岡開発者勉強会）に参加しました。</p>

<p><a href="http://nagaoka.techtalk.jp/no36">第36回勉強会(2013/03/15) &ndash; 長岡 IT開発者 勉強会(NDS)</a></p>

<p>今回のテーマは、「Go言語といろいろな言語たち」。
ボリュームが多すぎて、まとめきれません。すみません。
勉強会も終了時間ぎりぎりで終了となりました。</p>

<!-- more -->


<h2>メインセッション</h2>

<h3>Go言語入門 (@hayajo)</h3>

<p>資料は<a href="https://gist.github.com/hayajo/9559874">Gistにあります</a>。</p>

<p><a href="http://play.golang.org">Go Playground</a>でブラウザで動作検証可能との事。
発表中にも、ここに書かれたソースコードの説明等をしていただき、分かりやすかったです。</p>

<p>個人的には、"C言語を使いやすくした"印象を持ちました。
まずは、<a href="http://play.golang.org">Go Playground</a>で、いろいろいじってみようかな。</p>

<h2>サブセッション</h2>

<p>一応、但し書きとして、</p>

<blockquote><p>1言語につき何人話してOKです！
レガシーでも最新でも、初級から上級まで「言語」をテーマに含めてくれればなんでもOKです。
（ただなにもその知識がない人向けにも、さわりだけでも話してもらえると助かります）</p></blockquote>

<p>となっておりました。私も発表しております。</p>

<h3>Java7 や Java8 が僕らの目に優しくなってきている (@Nkzn)</h3>

<p>資料は<a href="http://www.slideshare.net/Nkzn/nds36-java7java8">こちら</a></p>

<p>Java7 とか Java8 とか、以前と比べて記述量が少なくなって、
確かに読みやすくなっている印象。</p>

<h3>Objective-C (@dictav)</h3>

<p>資料は<a href="https://speakerdeck.com/dictav/nds36-objective-c">こちら</a></p>

<p>Objective-Cは、最近ほとんど触らないけど、
今後使いそうな予感がするので、後で勉強しようっと。</p>

<h3>ちょこっとPython (@civic)</h3>

<p>資料は<a href="http://www.slideshare.net/fbcivic/36python">こちら</a></p>

<p>Pythonのドキュメントすごいな。</p>

<h3>プログラミングTeX (@neruko3114)</h3>

<p>資料は<a href="http://www.slideshare.net/hidetsugutamura/tex-32340082">こちら</a></p>

<p>こんなTeX見たことないよ～。
昔、論文やプレゼンで使ったことあるけど、
剰余演算に解説が必要な、ある意味「きもちわるい」プログラミングは新鮮でした。
こんな使い方もあったんだね。</p>

<p>ちなみに、発表者の資料もTeXで作成との事。</p>

<h3>Java8 Date and Time API (@gonchan93)</h3>

<p>Java8 から使える Date API と Time API についての説明。</p>

<p>がっつりJavaプログラミングしたのは、もう10年以上前（確かJava 1.2だったような気がする）だから、
「昔はどうだったっけ」と思い出しながら、そんなに苦労してたんだと改めて思った。</p>

<p>ここで少し休憩を挟んで、次へ。</p>

<h3>サポートベクターマシン入門 〜金貨の真贋を見分けよう〜 (@salinger001101)</h3>

<p>資料は<a href="https://github.com/Salinger/svm_gold">こちら</a></p>

<p>もうちょっと勉強しないと、理解するのが難しいな。
面白そうなのはわかる。
Rも使ってみたいし、統計学勉強しようかな。</p>

<h3>Kotlin 可愛いよ Kotlin (@Nkzn)</h3>

<p>資料は<a href="http://www.slideshare.net/Nkzn/nds36-kotlin-cute">こちら</a></p>

<p>ほぼ「Scala」らしい。新しい言語。
フィンランド語で「やかん」の意味。</p>

<p>Javaより書きやすいかも。
JVM上で動く言語が結構増えてきているから、</p>

<h3>はじめてのRuby (@dictav)</h3>

<p>資料は<a href="https://speakerdeck.com/dictav/ruby">こちら</a></p>

<p>Rubyについて、分かりやすく説明していただきました。
初級者に対して教える際に、参考にしていこうと思います。</p>

<h3>Ruby の Curry を少し食べてみた (@kasacchiful)</h3>

<p>資料は<a href="https://speakerdeck.com/kasacchiful/nds-36-rubycurry">こちら</a></p>

<p>私の発表。Rubyでカリー化をしてみた話です。
Rubyというよりは、カリー化の話ですね。</p>

<p>カレーをおいしくいただくためには、まずは
カレー自体をおいしく作る必要があるので、
カリー化もおいしくいただくためには、
カリー化するための場がうまく構成されてないと、
おいしくいただけないよなぁという気がしております。</p>

<h3>計量マークアップ言語 (@NPoi)</h3>

<p>markdownとかのお話。</p>

<p>markdownとか、HAMLとかいろいろ使っているけど、
まだまだ知らない言語があるみたいで、
参考になります。</p>

<h2>LT</h2>

<p>もうすでに、時間がおしている…。</p>

<h3>コミュニケーションツール (@upinetree)</h3>

<p>資料は<a href="https://speakerdeck.com/upinetree/hubot-plus-idobatadetimufalsekomiyunikesiyonwojia-su-saseru">こちら</a></p>

<p>「Hubot」と「idobata」を使って、
社内コミュニケーションを促進させるツールを使ってみたというお話。
ちなみに、「Hubot」は「ヒューボルト」と読むらしい。</p>

<p>チームみんなでキャラ育てて、愛着をもつっていう発想いいな。
面白そう。そんな環境で仕事してみたい。
@upinetreeさんもイキイキしてて、良かった。</p>

<h3>Redmine (@bnosuke)</h3>

<p>タスク管理にRedmine使ってみたというお話。
自分も、仕事でもプライベートでも使っております。</p>

<h3>2年前に作ったものを今更ながら公開します (@kasacchiful)</h3>

<p>時間がもう1分くらいしかなかったので、実演など余計な説明は一切なし。
速攻でしゃべりました。</p>

<p>発表の際に説明したアプリについては、別のページで解説する予定。</p>

<h2>懇親会</h2>

<p>今回はビアバッシュではなく、長岡市内の居酒屋で飲んで食べて騒ぎました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDS35に参加しました。]]></title>
    <link href="http://kasacchiful.github.com/blog/2014/01/18/nds35/"/>
    <updated>2014-01-18T12:45:00+09:00</updated>
    <id>http://kasacchiful.github.com/blog/2014/01/18/nds35</id>
    <content type="html"><![CDATA[<p>第35回NDS（長岡開発者勉強会）に参加しました。</p>

<p><a href="http://nagaoka.techtalk.jp/no35">第35回勉強会(2013/01/18) &amp; 新潟開発者新年会(NDS) &ndash; 長岡 IT開発者 勉強会(NDS)</a></p>

<p>今回のテーマは、「設計（≒デザイン）の話をしよう」。
ゲストスピーカー3本とLTの構成になっております。</p>

<!-- more -->


<h2>所感（というかメモ）</h2>

<p>所感を書こうと思ったけど、うまくまとめきれないので、
備忘録的なメモ書きが中心です。</p>

<h3>設計（≒デザイン）の話をしよう (@masaru_b_cl)</h3>

<!-- 高野将 さま -->


<p>まずは、高野さん (@masaru_b_cl) の発表から。
スライドは<a href="http://www.slideshare.net/masaru_b_cl/nds35">こちら</a>。
<a href="http://takanosho.wordpress.com/2014/01/21/nds35/">ブログ</a>にも解説がありました。</p>

<p>高野さんの経験から設計（≒デザイン）について「当たり前」の話をしゃべるとのこと。</p>

<p>設計（≒デザイン）とは「ソリューション」である
ソリューション（問題解決）
「何を」「どのように」「どうやって」
「どのように」は「どのようにするために」といった目的に近い感じかな。</p>

<h4>設計の進め方</h4>

<ol>
<li>目的の明確化</li>
<li>ゴールの設定</li>
<li>対応手段の決定</li>
</ol>


<p>目的の明確化については、「何が問題か」という、
問題解決の前に問題発見を見極める必要があるということ。</p>

<p><a href="http://www.amazon.co.jp/dp/4320023684">ライト、ついてますか</a>あたりを
もう一度読み直してみよう。
このあたりが「何が問題か」のアプローチのヒントになるはず。
そして、原因や前提条件等も明確化する必要がある。</p>

<p>問題を明確化した後はゴールの設定。そして、対応手順の決定。</p>

<p>このあたりを短いスパンで回していくのが良さそう。
発表でも「小さく繰り返すことで洗練される」とあったので、
KPT、PDCA等でふりかえりしながらやっていく。</p>

<h4>設計の重要ポイント</h4>

<ol>
<li>一貫性</li>
<li>トレードオフ</li>
<li>アフォーダンス</li>
<li>スキルである</li>
</ol>


<p>「設計はスキルだ」は、結構重要かな。
また、アフォーダンスについては、
この世の原理、原則みたいなものに反しないようにすることかな？
これに反することが特長となりうる利点なのか、やっぱり欠点なのかは、肝なのかもしれません。</p>

<p>一貫性については、<a href="http://japanese.joelonsoftware.com/">Joel on Software</a>第五章をもう一度読み直してみよう。</p>

<!-- [Joel on Software](http://www.amazon.co.jp/dp/4274066304) -->


<h4>設計する上での課題</h4>

<ol>
<li>どこから設計する？</li>
<li>どこまで設計する？</li>
<li>ゴールの設定はどうやる？</li>
<li>意識の外の問題はどうする？</li>
<li>完全には防げないよね？</li>
</ol>


<p>この辺りは「設計はスキルである」ということから、
繰り返しながら少しずつ身に付ける必要がありそう。
今回の発表内で挙がった内容や、各種書籍で挙げられているパターンやツールを使いながら、
時間がかかってでもやらなければならないと感じました。</p>

<p>あまりにもおかしな設計にならないためにも、
短いスパンでふりかえりが必要なのかな。</p>

<h4>以下、メモ</h4>

<ul>
<li>設計の一貫性とは？

<ul>
<li>一貫性から標準化が生まれる</li>
<li>『標準化を守ってるから一貫性があるのではなく、一貫性を保つための指針が標準化なんだよ！』</li>
<li>「一貫性」「バランス」って便利な言葉だ</li>
</ul>
</li>
<li>「守破離」

<ul>
<li>物事の本質を理解していなければ、「守破離」はできない。</li>
<li>においとかも「なぜにおうのか」を言語化できなければ、</li>
</ul>
</li>
<li>yagn

<ul>
<li>守るとどこまでやればいいのかわからなくなる</li>
<li>ゴールの線引きが難しい

<ul>
<li>問題を改めて考えてみるのがよいかも</li>
<li>優先度をつけてみる</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>最後の質疑応答で「魂」の話になったりして、面白かった。</p>

<h3>ソフトウェア開発のInput→Architecture→Structure</h3>

<!-- 尾上雅則 さま -->


<p>つぎに、尾上さん (@ugaya40) の発表。
MVVMの人ですね。</p>

<!--
http://ugaya40.net
-->


<p>パターンなんだけど、パターンにはまらないなどのお話</p>

<h4>以下、メモ</h4>

<p>以下、発表で心に残ったものをメモ。</p>

<ul>
<li>ソフトウェア開発の理想

<ul>
<li>Input &ndash;> Structure</li>
</ul>
</li>
<li>ソフトウェア開発の現実

<ul>
<li>Input &ndash;> 複雑さに対する各種対処（Architecture）-> Structure</li>
</ul>
</li>
</ul>


<p>「Architecture が Structure を定義する！」ってなるほどと思った。</p>

<ul>
<li>Architectureとは、
  すべての複雑さに対する対処のこと。工学的には「関心事の分離」。</li>
<li>アプリケーションはそもそもドメイン（問題領域）に対するソリューションである。</li>
<li>Architecture Pattern

<ul>
<li>アーキテクチャ記述の一種

<ul>
<li>GoFのあれとかはStructure Pattern</li>
</ul>
</li>
<li>GUI Architecture Pattern など</li>
</ul>
</li>
<li>例：MVC

<ul>
<li>MVC系

<ul>
<li>MVC系の何がViewpointで何がViewなのか</li>
<li>Viewpoint: Presentation Domain Separation

<ul>
<li>プレゼン部分とそれ以外の部分にわけるだけの視点</li>
</ul>
</li>
<li>View:

<ul>
<li>各プラットフォームで異なるMVC</li>
<li>PDSの視点を適用した結果がMVCの各プラットフォームで異なる図になる</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Architecture記述はStructure記述ではない

<ul>
<li>アーキテクチャ設計=関心事の分離のための記述だから、
  Viewpoint（視点）ありきでView（アーキテクチャ記述のview）がある。</li>
</ul>
</li>
<li>SIerのWebシステムとかは「Transaction Script」。</li>
<li>C/Sやスマホアプリ等のリッチクライアントとかは状態管理しなきゃいけないので、
  Transaction Scriptでは破綻する。</li>
<li>いろんなアプローチがある。</li>
</ul>


<h4>まとめ</h4>

<ul>
<li>アーキテクチャは複雑さへの対処

<ul>
<li>アプローチは関心事の分離。</li>
</ul>
</li>
<li>アーキテクチャの表現のされ方

<ul>
<li>アーキテクチャを単一のViewで記述できない</li>
<li>アーキテクチャは複数のViewpointとViewで構成されるアーキテクチャ記述で表現される</li>
</ul>
</li>
</ul>


<p>マーティンファウラーの「Presentation Domain Separation」は
後日読んでみようかな。</p>

<p>発表内容は、自分の知る「アーキテクチャ」の概念が実は誤りだったかもしれないので、
聞いてて混乱してきた部分が多い。
いろいろ調べて理解しないと、やばいなこりゃ。</p>

<h3>組織設計の基礎理論と実践</h3>

<!-- 松岡梨沙 さま -->


<p>最後に、Matsuki**さん (@liliput) の発表。</p>

<p>発表について、ブログでまとめられております。
<a href="http://lllagoon.hatenablog.com/entry/2014/01/23/145805">長岡で話したこと / 話さなかったこと #NDS35  &ndash; エルの楽園</a></p>

<h4>以下、メモ</h4>

<p>「組織設計」って言葉は、個人的にはあまり耳慣れない言葉でした。
組織を設計するということは、プロジェクトマネジメントのようなものなのかなと思った。</p>

<p>プロジェクトマネジメントについては、今後いろいろとやらなければならない立場なので、
お勉強中だったりする。
小規模プロジェクトからやらさせていただいているけど、
なかなか大変ですね。</p>

<p>組織設計も、他の設計と同様に、
「何を」「どのように」「どうやって」をしていくことであって
プロジェクトマネジメントも同じかなと。</p>

<p>以下、気になった言葉のメモ</p>

<ul>
<li>時間を区切って考える

<ul>
<li>時間軸から考える組織運営

<ul>
<li>目標はいつまでに達成？</li>
<li>その期間、どのように組織は変化する？</li>
<li>目標が達成されたとき、その組織はどうなる？</li>
</ul>
</li>
<li>ある一定の期間で、いろいろと変化するはず</li>
</ul>
</li>
<li>時間経過による構成員の流動

<ul>
<li>組織への流入 &ndash; 構成員をどう選ぶ？</li>
<li>組織の運営 &ndash; 構成員の品質をどう保つ？</li>
<li>組織からの流出 &ndash; 構成員が去った後どうする？</li>
</ul>
</li>
<li>戦略？戦術？

<ul>
<li>戦略：目的とリソース配分方針の設定</li>
<li>戦術：上記条件を達成するための手段</li>
</ul>
</li>
<li>戦略と戦術との本当の関係

<ul>
<li>現状のリソースと持っている戦術</li>
<li>単純な階層構造ではなく、スパイラルでフラクタルな関係にある。</li>
<li>戦略はテンポラリでプライベートなものであり、当事者以外の誰にも作れません。</li>
<li>戦術はユニバーサルで、条件さえ合うならば、他の局面でも応用可能</li>
</ul>
</li>
<li>リーンでアジャイルなスタイルを組織にも…

<ul>
<li>PDCAでまわす</li>
<li>最初からすべてを詰め込まない</li>
<li>すべての人を巻き込む</li>
</ul>
</li>
<li>状況変化への対応と問題解決のために</li>
<li>根拠とは

<ul>
<li>誰でも参照できる</li>
<li>誰が見てもそう判断できる</li>
</ul>
</li>
<li>内面化

<ul>
<li>クレイトン・クリステンセン「イノベーションのジレンマ」</li>
</ul>
</li>
<li>偉い人が「ルール」を作るだけでは誰もついてこない。</li>
<li>1ヶ月から3ヶ月で人間の価値観は変わる。</li>
<li>組織の中で気づかないうちに何がおこっているのか？</li>
<li>いかなるシステムがそれを再生産し続けているのか？</li>
<li>調査をしやすくする下地を作るために有効なあの手この手

<ol>
<li> 数会話

<ul>
<li>具体的な思考の癖がつく</li>
<li>客観的に行う習慣ができる</li>
<li>時間や労力、予算、進捗といった主観的な状況記述にコンセンサスがとれる</li>
</ul>
</li>
<li> Job Descriptionを書いてみる

<ul>
<li>「職務記述書」と呼ばれたりする。</li>
<li>たとえ実際の人事プロセスに反映されないとしても、</li>
<li>「自分たちの業務は何なのか」「どういう人材を望ましいと考えているのか」の
  コンセンサスをとってみる。</li>
<li>技能的側面 + 情意的側面 = 能力

<ul>
<li>(competency) + (personality) = (Ability)</li>
</ul>
</li>
</ul>
</li>
<li> Evidence Based Scheduling

<ul>
<li>Joel Spolsky氏提唱</li>
<li>各タスクにかかる時間を測定し、それらのデータから統計的に作業時間を見積もる。</li>
<li>「Joel on Software」</li>
</ul>
</li>
<li> 「射撃しつつ前進」

<ul>
<li>とりあえずやれることをやるだけやってみる！

<ul>
<li>「試験的に」／「この部分だけ」／「ちょっとの間」</li>
<li>改善策を最初から完璧に実行しない</li>
<li>正負に関わらず、どんなフィードバックがあるかを冷静に観察する</li>
</ul>
</li>
</ul>
</li>
</ol>
</li>
<li>何が起こっているのかを把握する。</li>
<li>これらの方法だけでは、問題を解決しません。</li>
<li>何が起こっているのかを知る手がかりの一部を教えてくれるし、
  原因追求を可能にする「土壌」を作ってくれる。</li>
</ul>


<h3>メインセッション感想</h3>

<p>今回はすごい回でした。
自分の理解している事、理解不足の事、
初めて聞く言葉も結構多かったですけど、
いろいろ感じるところがありました。</p>

<p>「何を」「どのように」したいのかを考える前提があって
アプリケーションだったりプログラムだったり組織だったり、
いろいろな場面で「設計」が役に立つこと。
改めて思い知らされました。</p>

<p>あとは、<a href="http://www.amazon.co.jp/dp/4274066304">Joel on Software</a>読むべし。</p>

<h2>LT</h2>

<p>今新潟で勢いのある「ウォーターセル」勢から、
いろいろとLTがありました。</p>

<p>「PHP駆逐！」だったり、「iPadすげー」だったり、
面白いセッションでした。</p>

<h2>懇親会</h2>

<p>所用があったので、懇親会は欠席となりました。
NDS（Niigata Developer&rsquo;s Shinnenkai: 新潟開発者新年会）も行われたのに、
参加できなかったのが心残り。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDS34に参加しました。]]></title>
    <link href="http://kasacchiful.github.com/blog/2013/11/18/nds34/"/>
    <updated>2013-11-18T23:36:00+09:00</updated>
    <id>http://kasacchiful.github.com/blog/2013/11/18/nds34</id>
    <content type="html"><![CDATA[<p>第34回NDS（長岡開発者勉強会）に参加しました。</p>

<p><a href="http://nagaoka.techtalk.jp/no34">第34回勉強会(2013/11/16) &ndash; 長岡 IT開発者 勉強会(NDS)</a></p>

<p>今回のテーマは、「Google Analytics 基礎講座」。</p>

<!-- more -->


<h2>所感</h2>

<p>Google Analytics については、試しに使ってみる程度で
うまく活用する場面がなかったので、内容は結構新鮮に聞けました。</p>

<p>KPIとかは、サイト解析だけではなく
仕事で普通に使える考え方なので、今後も活用していきたいです。</p>

<h3>KPI</h3>

<p>KPIとは目標に直結する指標のこと</p>

<ul>
<li>KPI: Key Performance Indicator</li>
<li>目標から逆算して設定する</li>
<li>このKPIをアクセス解析ツールでモニタリングする

<ul>
<li>例：商品ページ閲覧数</li>
<li>フォーム落ち率</li>
<li>ギフトオプションページ閲覧数</li>
<li>商品ページ更新頻度</li>
<li>新規訪問者数、リピート訪問者数</li>
</ul>
</li>
</ul>


<p>KPI以外にも、KGIやKSFなどもあるようなので、あとで確認ですね。</p>

<ul>
<li>KGI: Key Goal Indicator</li>
<li>KSF: Key Success Factor</li>
</ul>


<p>以下、私なりに例を挙げてみました。</p>

<h4>例：目標からKPIを考える</h4>

<ul>
<li>80kgから-10kg減量する

<ul>
<li>消費カロリーを増やす

<ul>
<li>有酸素運動する

<ul>
<li>走る</li>
<li>泳ぐ</li>
<li>自転車をこぐ</li>
<li>エレベータを使わず階段で上がる</li>
</ul>
</li>
<li>基礎代謝を増やす

<ul>
<li>筋力トレーニングをする

<ul>
<li>腕立て伏せ</li>
<li>ダンベルあげ</li>
<li>腹筋</li>
<li>背筋</li>
<li>スクワット</li>
<li>四股</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>摂取カロリーを減らす

<ul>
<li>余分な脂肪分を減らす</li>
<li>余分な糖質を減らす

<ul>
<li>炭水化物を減らす</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<h4>例：行動からKPIを考える</h4>

<ul>
<li>80kgから-10kg減量する

<ul>
<li>動く

<ul>
<li>動くための時間の確保

<ul>
<li>基礎代謝は10分</li>
<li>有酸素運動は1時間</li>
</ul>
</li>
<li>動くための場所の確保

<ul>
<li>基礎代謝は部屋の空間を空ける</li>
<li>有酸素運動は近所のジョギングコースを設定する</li>
</ul>
</li>
<li>有酸素運動する

<ul>
<li>走る</li>
<li>泳ぐ</li>
<li>自転車をこぐ</li>
<li>エレベータを使わず階段で上がる</li>
</ul>
</li>
<li>基礎代謝を増やす

<ul>
<li>筋力トレーニングをする

<ul>
<li>腕立て伏せ</li>
<li>ダンベルあげ</li>
<li>腹筋</li>
<li>背筋</li>
<li>スクワット</li>
<li>四股</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>食べる量を減らす

<ul>
<li>余分な脂肪分を減らす</li>
<li>余分な糖質を減らす

<ul>
<li>炭水化物を減らす</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>コツはこんな感じ。</p>

<ul>
<li>目標をブレイクダウンする</li>
<li>目標達成に必要で重要な指標を「KPI」という</li>
<li>KPIはネットに縛られる必要は無い</li>
<li>ネットで取得できるものをアクセス解析ツールなどを使ってモニタリングする</li>
</ul>


<p>他にもいろいろメモはとったけど、
うまくまとめて掲載できないので省略します。</p>

<h2>LT</h2>

<h3>Chrome拡張 CopyFlickrを更新 （@civic さん）</h3>

<p>以前からの公開済みの CopyFlickr のアップデートの告知。
実は勝間さんも使っていたとは！</p>

<p>Flickrへアップロードした画像へのリンクを取得してブログへの貼付けることが簡単なんだそうです。</p>

<p>でも、FlickrのUI刷新により、サイトが重くなって、写真の一覧がまともに使えなくなった。
そこで、Chromeの別Windowから写真の一覧が表示できるようにして、
そこから選択できるようにしたらサクサク動くようになったとのこと。</p>

<p>ブログの写真貼付に便利そうですね。</p>

<h3>お願い駆動LTのお願い （@nemuzuka さん）</h3>

<p>片桐さんのお話。</p>

<p>サーバサイド側の人もクライアントサイド側の人も
交流を深めるためにLTでどんどんお話を聞かせてくださいというお願いをしていました。</p>

<p>聞きたいこと1
Twitter Bootstrapを
素人っぽくない、ちゃんとした色合いのこつを聞きたい</p>

<p>聞きたいこと2
最強に使いやすいUI/UX/レイアウト教えて</p>

<p>聞きたいこと3
保守性の高いCSSの書き方教えて</p>

<p>もっとも聞きたいこと
エンドユーザのIEを最新にさせる口説き方</p>

<p>IEの口説き方について、なんとKPIを計画していた。
結局保守作業費用でもめるから意味ないとかなんとか。
よーくわかります。</p>

<h3>Bluetooth Low Energyで開発しよう！！ （@wdmsk さん）</h3>

<p>こちらも自己紹介でKPIを計画していた。</p>

<p>Bluetooth Low Energyが流行っているから開発しようというお話。
ウェアラブルデバイスでよく使われているとのこと。</p>

<p>開発するには、iOSではiPhone4s, iOS5から
Androidでは、OSでのサポートは4.3からとのこと。
Windowsでは、Windows 8から使えるようです。</p>

<!-- 最後は、Bluetooth Low Energyを使った
「ユニオンツール株式会社」の製品紹介になりました。
開発ツールが無償提供中なので、開発しませんかとのこと。
デモは @wdmsk さんのリアルタイム心拍数。結構高めw。
 -->


<h3>NDS開催のお知らせ （@NPoi さん）</h3>

<p>NDSやります（？）から始まった発表。</p>

<p>NDSは新潟（or 長岡）IT開発者新年会野意味で
それを無茶ぶりされたお話でした。</p>

<p>昨年度は忘年会（NDB）があったけど、今年は新年会とのことです。</p>

<ul>
<li>1月半ば以降に</li>
<li>新潟か、長岡で</li>
<li>25名前後で</li>
</ul>


<p>だそうです。</p>

<h3>Chocolatey NuGet （@nukokusa さん）</h3>

<p>yumとかaptとかの
パッケージ管理システムについて、
Windows用のパッケージ管理システムのお話。</p>

<p>PowerShellで書かれているらしい。
<a href="http://chocolaty.org">http://chocolaty.org</a></p>

<p>PowerShellのコマンド叩くだけで、管理可能とのこと。
NuGetとChefとかをうまく使えば便利かもね。</p>

<h2>懇親会</h2>

<p>懇親会も参加して、非常に楽しくお話しさせていただきました。
やっぱり関要のオードブルがうまい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NDS33に参加しました。]]></title>
    <link href="http://kasacchiful.github.com/blog/2013/09/29/nds33/"/>
    <updated>2013-09-29T22:36:00+09:00</updated>
    <id>http://kasacchiful.github.com/blog/2013/09/29/nds33</id>
    <content type="html"><![CDATA[<p>第33回NDS（長岡開発者勉強会）に参加しました。</p>

<p><a href="http://nagaoka.techtalk.jp/no33">第33回勉強会(2013/09/28) Scala入学式 &ndash; 長岡 IT開発者 勉強会(NDS)</a></p>

<p>今回のテーマは、「Scala入学式」。
Scalaは、結構前にコップ本買ったけど手つかずだった言語。
気になっていた存在でした。
半日がっつり勉強です。</p>

<p>ちなみに、前日27日には「<a href="http://connpass.com/event/3568/">Scala入学試験</a>」なるものも開催されていたらしい。</p>

<!-- more -->


<h2>体調がわるい</h2>

<p>勉強会の前の2日間、仕事があまりにも忙しくて飯も食わずに作業していた関係で、
眠いし腹減ってるしゲーリーだしで、実は結構体調は悪かったです。
しかも腹減っているわりには食が進まず、お昼もおにぎり1個で十分だった。</p>

<p>こんな体調で勉強会大丈夫なのか、結構不安でした。</p>

<h2>所感</h2>

<p>テキストは<a href="https://gist.github.com/Shinpeim/6740436">これ</a>。</p>

<p>かなりがっつりScalaプログラミング。
キータイプするスピードがいつもより遅い自分には
コーディングについていくのがやっと…。</p>

<p>内容は自分にとっては結構すんなりわかるものだったので、良かったです。
Optionモナドについても、ついていけばなんかわかっているつもりになっている。
このあたりは、時間があるときに改めて学習すると、モナドについてもっとよくわかるかも。
ということで、後日学習します。</p>

<p>最後の演習は、ScalaとTwitter APIで「NullPoGaBot」を作りました。
「ぬるぽ」とつぶやくと、「ガッ」とつぶやいてくれるbotです。
これも、すんなりコーディングができました。</p>

<p>講師の猫型さんの教え方がうまいおかげで、
短い時間でボリューム豊富な割に、わかりやすかったです。</p>

<h2>LT</h2>

<p>LTのまとめは、内容をほとんどメモしていなかったため省略。</p>

<h2>懇親会</h2>

<p>体調悪いくせに懇親会も参加して、非常に楽しくお話しさせていただきました。
今回も関要のオードブルがうまい。
ここ2日間、ろくに飯を食べていないせいか、
腹が減っているにも関わらず、昼はそれほど食が進まなかったけど、
肉のうまさに箸が進みました。</p>

<p>最近お酒が弱くなってきたのか、ビール2本でへろへろになってしまった。
帰りの新幹線で寝てしまった…。</p>
]]></content>
  </entry>
  
</feed>
